# Generated by Django 4.2.7 on 2024-01-15 10:30:00

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('payroll', '0001_initial'),
    ]

    operations = [
        # Agregar campos de integración ATS a PayrollCompany
        migrations.AddField(
            model_name='payrollcompany',
            name='ats_integration_enabled',
            field=models.BooleanField(default=True, verbose_name='Integración ATS activa'),
        ),
        migrations.AddField(
            model_name='payrollcompany',
            name='ats_company_id',
            field=models.UUIDField(blank=True, null=True, verbose_name='ID empresa en ATS'),
        ),
        migrations.AddField(
            model_name='payrollcompany',
            name='ats_sync_enabled',
            field=models.BooleanField(default=True, verbose_name='Sincronización ATS activa'),
        ),
        
        # Agregar campos de configuración ML a PayrollCompany
        migrations.AddField(
            model_name='payrollcompany',
            name='ml_attendance_mode',
            field=models.CharField(
                choices=[
                    ('precise', 'Preciso y Sistemático'),
                    ('ml_learning', 'ML con Aprendizaje'),
                    ('random_ml', 'Aleatorio con ML'),
                    ('hybrid', 'Híbrido (Preciso + ML)')
                ],
                default='hybrid',
                max_length=20,
                verbose_name='Modo de Asistencia ML'
            ),
        ),
        migrations.AddField(
            model_name='payrollcompany',
            name='ml_accuracy_threshold',
            field=models.DecimalField(
                decimal_places=2,
                default=85.00,
                max_digits=5,
                validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)],
                verbose_name='Umbral de Precisión ML (%)'
            ),
        ),
        migrations.AddField(
            model_name='payrollcompany',
            name='ml_learning_enabled',
            field=models.BooleanField(default=True, verbose_name='Aprendizaje ML activo'),
        ),
        migrations.AddField(
            model_name='payrollcompany',
            name='ml_training_data_days',
            field=models.IntegerField(default=90, verbose_name='Días de datos de entrenamiento'),
        ),
        
        # Agregar campos de integración ATS a PayrollEmployee
        migrations.AddField(
            model_name='payrollemployee',
            name='ats_candidate_id',
            field=models.UUIDField(blank=True, null=True, verbose_name='ID candidato en ATS'),
        ),
        migrations.AddField(
            model_name='payrollemployee',
            name='ats_job_id',
            field=models.UUIDField(blank=True, null=True, verbose_name='ID trabajo en ATS'),
        ),
        migrations.AddField(
            model_name='payrollemployee',
            name='career_profile',
            field=models.JSONField(default=dict, verbose_name='Perfil de carrera profesional'),
        ),
        migrations.AddField(
            model_name='payrollemployee',
            name='skills_assessment',
            field=models.JSONField(default=dict, verbose_name='Evaluación de habilidades'),
        ),
        migrations.AddField(
            model_name='payrollemployee',
            name='performance_history',
            field=models.JSONField(default=dict, verbose_name='Historial de desempeño'),
        ),
        
        # Agregar campos ML a PayrollEmployee
        migrations.AddField(
            model_name='payrollemployee',
            name='attendance_pattern',
            field=models.JSONField(default=dict, verbose_name='Patrón de asistencia ML'),
        ),
        migrations.AddField(
            model_name='payrollemployee',
            name='ml_confidence_score',
            field=models.DecimalField(
                decimal_places=2,
                default=0.00,
                max_digits=5,
                validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)],
                verbose_name='Score de confianza ML'
            ),
        ),
        migrations.AddField(
            model_name='payrollemployee',
            name='attendance_anomalies',
            field=models.JSONField(default=list, verbose_name='Anomalías de asistencia'),
        ),
        
        # Agregar campos ML a PayrollPeriod
        migrations.AddField(
            model_name='payrollperiod',
            name='ml_analysis',
            field=models.JSONField(default=dict, verbose_name='Análisis ML del período'),
        ),
        migrations.AddField(
            model_name='payrollperiod',
            name='attendance_accuracy',
            field=models.DecimalField(
                decimal_places=2,
                default=0.00,
                max_digits=5,
                validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)],
                verbose_name='Precisión de asistencia (%)'
            ),
        ),
        
        # Agregar campos ML a AttendanceRecord
        migrations.AddField(
            model_name='attendancerecord',
            name='ml_prediction',
            field=models.JSONField(default=dict, verbose_name='Predicción ML'),
        ),
        migrations.AddField(
            model_name='attendancerecord',
            name='ml_confidence',
            field=models.DecimalField(
                decimal_places=2,
                default=0.00,
                max_digits=5,
                validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)],
                verbose_name='Confianza ML (%)'
            ),
        ),
        migrations.AddField(
            model_name='attendancerecord',
            name='ml_anomaly_detected',
            field=models.BooleanField(default=False, verbose_name='Anomalía ML detectada'),
        ),
        migrations.AddField(
            model_name='attendancerecord',
            name='ml_anomaly_type',
            field=models.CharField(blank=True, max_length=50, verbose_name='Tipo de anomalía'),
        ),
        
        # Crear modelo MLAttendanceModel
        migrations.CreateModel(
            name='MLAttendanceModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('model_name', models.CharField(max_length=100, verbose_name='Nombre del modelo')),
                ('model_type', models.CharField(
                    choices=[
                        ('random_forest', 'Random Forest'),
                        ('neural_network', 'Neural Network'),
                        ('gradient_boosting', 'Gradient Boosting'),
                        ('lstm', 'LSTM'),
                        ('hybrid', 'Híbrido')
                    ],
                    max_length=20,
                    verbose_name='Tipo de modelo'
                )),
                ('accuracy', models.DecimalField(
                    decimal_places=2,
                    default=0.00,
                    max_digits=5,
                    validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)],
                    verbose_name='Precisión (%)'
                )),
                ('precision', models.DecimalField(
                    decimal_places=2,
                    default=0.00,
                    max_digits=5,
                    validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)],
                    verbose_name='Precisión (%)'
                )),
                ('recall', models.DecimalField(
                    decimal_places=2,
                    default=0.00,
                    max_digits=5,
                    validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)],
                    verbose_name='Recall (%)'
                )),
                ('training_data_size', models.IntegerField(default=0, verbose_name='Tamaño datos entrenamiento')),
                ('last_training_date', models.DateTimeField(blank=True, null=True, verbose_name='Última fecha de entrenamiento')),
                ('model_parameters', models.JSONField(default=dict, verbose_name='Parámetros del modelo')),
                ('is_active', models.BooleanField(default=True, verbose_name='Modelo activo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ml_models', to='payroll.payrollcompany', verbose_name='Empresa')),
            ],
            options={
                'verbose_name': 'Modelo ML de Asistencia',
                'verbose_name_plural': 'Modelos ML de Asistencia',
                'db_table': 'payroll_ml_attendance_model',
            },
        ),
        
        # Agregar índices para optimización
        migrations.AddIndex(
            model_name='payrollcompany',
            index=models.Index(fields=['ats_integration_enabled'], name='payroll_com_ats_int_123456_idx'),
        ),
        migrations.AddIndex(
            model_name='payrollcompany',
            index=models.Index(fields=['ml_attendance_mode'], name='payroll_com_ml_atte_123456_idx'),
        ),
        migrations.AddIndex(
            model_name='payrollemployee',
            index=models.Index(fields=['ats_candidate_id'], name='payroll_emp_ats_can_123456_idx'),
        ),
        migrations.AddIndex(
            model_name='payrollemployee',
            index=models.Index(fields=['ml_confidence_score'], name='payroll_emp_ml_con_123456_idx'),
        ),
        migrations.AddIndex(
            model_name='payrollperiod',
            index=models.Index(fields=['attendance_accuracy'], name='payroll_per_attend_123456_idx'),
        ),
        migrations.AddIndex(
            model_name='attendancerecord',
            index=models.Index(fields=['ml_anomaly_detected'], name='payroll_att_ml_ano_123456_idx'),
        ),
        migrations.AddIndex(
            model_name='attendancerecord',
            index=models.Index(fields=['ml_confidence'], name='payroll_att_ml_con_123456_idx'),
        ),
        migrations.AddIndex(
            model_name='mlattendancemodel',
            index=models.Index(fields=['company', 'is_active'], name='payroll_ml_company_123456_idx'),
        ),
        migrations.AddIndex(
            model_name='mlattendancemodel',
            index=models.Index(fields=['model_type'], name='payroll_ml_model_t_123456_idx'),
        ),
        migrations.AddIndex(
            model_name='mlattendancemodel',
            index=models.Index(fields=['accuracy'], name='payroll_ml_accurac_123456_idx'),
        ),
    ] 