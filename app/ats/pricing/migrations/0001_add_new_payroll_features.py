# Generated by Django 4.2.23 on 2025-07-16 17:05

from decimal import Decimal
import django.core.serializers.json
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('app', '0001_add_new_payroll_features'),
    ]

    operations = [
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('account_name', models.CharField(help_text='Nombre de la cuenta', max_length=100)),
                ('bank', models.CharField(help_text='Nombre del banco', max_length=100)),
                ('account_type', models.CharField(choices=[('checking', 'Cuenta Corriente'), ('savings', 'Cuenta de Ahorro'), ('business', 'Cuenta Empresarial')], max_length=20)),
                ('account_number', models.CharField(blank=True, max_length=50, null=True)),
                ('clabe', models.CharField(blank=True, help_text='CLABE bancaria', max_length=18, null=True)),
                ('routing_number', models.CharField(blank=True, max_length=20, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_primary', models.BooleanField(default=False, help_text='¿Es la cuenta principal?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('business_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.businessunit')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.person')),
            ],
            options={
                'verbose_name': 'Cuenta Bancaria',
                'verbose_name_plural': 'Cuentas Bancarias',
                'db_table': 'pricing_bank_account',
            },
        ),
        migrations.CreateModel(
            name='Bundle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('duration_days', models.PositiveIntegerField(default=30)),
                ('features', models.JSONField(default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Bundle',
                'verbose_name_plural': 'Bundles',
                'db_table': 'ats_pricing_bundle',
            },
        ),
        migrations.CreateModel(
            name='CFDIExhibition',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('exhibition_type', models.CharField(choices=[('PUE', 'Pago en una sola exhibición'), ('PPD', 'Pago en parcialidades o diferido')], default='PUE', max_length=3)),
                ('payment_status', models.CharField(choices=[('pending', 'Pendiente'), ('partial', 'Parcialmente pagado'), ('completed', 'Completamente pagado'), ('overdue', 'Vencido'), ('cancelled', 'Cancelado')], default='pending', max_length=20)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('paid_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('remaining_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('due_date', models.DateTimeField(help_text='Fecha de vencimiento del pago')),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('payment_schedule', models.JSONField(default=list, help_text='Cronograma de pagos parciales')),
                ('notes', models.TextField(blank=True)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cfdi_exhibitions', to='app.invoice')),
            ],
            options={
                'verbose_name': 'CFDI en Exhibición',
                'verbose_name_plural': 'CFDIs en Exhibición',
                'db_table': 'pricing_cfdi_exhibition',
            },
        ),
        migrations.CreateModel(
            name='DiscountRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('percentage', 'Porcentaje'), ('fixed', 'Monto fijo'), ('volume', 'Por volumen'), ('loyalty', 'Por lealtad')], max_length=20)),
                ('value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('conditions', models.JSONField(default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('valid_from', models.DateTimeField()),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-valid_from'],
            },
        ),
        migrations.CreateModel(
            name='Empleador',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('whatsapp', models.CharField(blank=True, max_length=20, null=True)),
                ('razon_social', models.CharField(help_text='Razón social de la empresa', max_length=200)),
                ('rfc', models.CharField(blank=True, help_text='RFC de la empresa', max_length=13, null=True)),
                ('direccion_fiscal', models.TextField(blank=True, null=True)),
                ('clabe', models.CharField(blank=True, help_text='CLABE bancaria', max_length=18, null=True)),
                ('banco', models.CharField(blank=True, help_text='Banco', max_length=100, null=True)),
                ('img_company', models.ImageField(blank=True, null=True, upload_to='empleadores/')),
                ('sitio_web', models.URLField(blank=True, null=True)),
                ('telefono_oficina', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('estado', models.CharField(choices=[('activo', 'Activo'), ('inactivo', 'Inactivo'), ('pendiente', 'Pendiente'), ('suspendido', 'Suspendido')], default='activo', max_length=20)),
                ('documento_identidad', models.FileField(blank=True, null=True, upload_to='empleadores/documentos/')),
                ('comprobante_domicilio', models.FileField(blank=True, null=True, upload_to='empleadores/documentos/')),
                ('job_id', models.CharField(blank=True, max_length=100, null=True)),
                ('url_name', models.CharField(blank=True, max_length=100, null=True)),
                ('salary', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('job_type', models.CharField(blank=True, choices=[('full_time', 'Tiempo Completo'), ('part_time', 'Tiempo Parcial'), ('contract', 'Contrato'), ('freelance', 'Freelance'), ('internship', 'Prácticas')], max_length=20, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('required_skills', models.TextField(blank=True, null=True)),
                ('experience_required', models.TextField(blank=True, null=True)),
                ('job_description', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('persona', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='empleadores', to='app.person')),
            ],
            options={
                'verbose_name': 'Empleador',
                'verbose_name_plural': 'Empleadores',
                'db_table': 'pricing_empleador',
            },
        ),
        migrations.CreateModel(
            name='ExternalService',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('service_id', models.CharField(help_text='ID único del servicio', max_length=50, unique=True)),
                ('title', models.CharField(help_text='Título del servicio', max_length=200)),
                ('description', models.TextField(help_text='Descripción detallada del servicio')),
                ('status', models.CharField(choices=[('prospecting', 'Prospección'), ('negotiation', 'Negociación'), ('active', 'Activo'), ('in_progress', 'En Progreso'), ('on_hold', 'En Pausa'), ('completed', 'Completado'), ('cancelled', 'Cancelado'), ('lost', 'Perdido')], default='prospecting', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Baja'), ('medium', 'Media'), ('high', 'Alta'), ('urgent', 'Urgente')], default='medium', max_length=20)),
                ('start_date', models.DateTimeField(help_text='Fecha de inicio del servicio')),
                ('end_date', models.DateTimeField(blank=True, help_text='Fecha de fin estimada', null=True)),
                ('actual_end_date', models.DateTimeField(blank=True, help_text='Fecha de fin real', null=True)),
                ('estimated_amount', models.DecimalField(decimal_places=2, help_text='Monto estimado del servicio', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('actual_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Monto real del servicio', max_digits=15)),
                ('currency', models.CharField(default='MXN', max_length=3)),
                ('billing_structure', models.CharField(choices=[('upfront', 'Anticipado'), ('milestone', 'Por Hitos'), ('monthly', 'Mensual'), ('upon_completion', 'Al Completar'), ('custom', 'Personalizado')], default='upon_completion', max_length=20)),
                ('requirements', models.JSONField(default=list, help_text='Lista de requisitos del servicio')),
                ('deliverables', models.JSONField(default=list, help_text='Lista de entregables')),
                ('progress_percentage', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Porcentaje de progreso (0-100)', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MinValueValidator(Decimal('100.00'))])),
                ('notes', models.TextField(blank=True, help_text='Notas internas')),
                ('client_notes', models.TextField(blank=True, help_text='Notas del cliente')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_team', models.ManyToManyField(blank=True, related_name='external_services_team', to='app.person')),
                ('business_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.businessunit')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='external_services_client', to='app.person')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='external_services_created', to='app.person')),
                ('responsible', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='external_services_responsible', to='app.person')),
            ],
            options={
                'verbose_name': 'Servicio Externo',
                'verbose_name_plural': 'Servicios Externos',
                'db_table': 'pricing_external_service',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ExternalServiceType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Nombre del tipo de servicio', max_length=100)),
                ('category', models.CharField(choices=[('recruitment', 'Reclutamiento'), ('headhunting', 'Headhunting'), ('assessment', 'Evaluación'), ('consulting', 'Consultoría'), ('training', 'Capacitación'), ('outplacement', 'Outplacement'), ('hr_audit', 'Auditoría RH'), ('compensation', 'Compensaciones'), ('organizational', 'Organizacional'), ('other', 'Otro')], max_length=20)),
                ('description', models.TextField(help_text='Descripción del servicio')),
                ('base_price', models.DecimalField(decimal_places=2, help_text='Precio base del servicio', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('price_type', models.CharField(choices=[('fixed', 'Precio Fijo'), ('hourly', 'Por Hora'), ('percentage', 'Porcentaje'), ('commission', 'Comisión'), ('custom', 'Personalizado')], default='fixed', max_length=20)),
                ('billing_frequency', models.CharField(choices=[('one_time', 'Una Vez'), ('monthly', 'Mensual'), ('quarterly', 'Trimestral'), ('project', 'Por Proyecto'), ('milestone', 'Por Hito')], default='one_time', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Tipo de Servicio Externo',
                'verbose_name_plural': 'Tipos de Servicios Externos',
                'db_table': 'pricing_external_service_type',
            },
        ),
        migrations.CreateModel(
            name='Oportunidad',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('titulo', models.CharField(help_text='Título de la oportunidad', max_length=200)),
                ('descripcion', models.TextField(help_text='Descripción detallada de la oportunidad')),
                ('tipo_contrato', models.CharField(choices=[('indefinido', 'Indefinido'), ('determinado', 'Determinado'), ('por_obra', 'Por Obra'), ('temporal', 'Temporal'), ('practicas', 'Prácticas'), ('freelance', 'Freelance')], max_length=20)),
                ('modalidad', models.CharField(choices=[('presencial', 'Presencial'), ('remoto', 'Remoto'), ('hibrido', 'Híbrido')], max_length=20)),
                ('salario_minimo', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('salario_maximo', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('pais', models.CharField(default='México', max_length=100)),
                ('ciudad', models.CharField(blank=True, max_length=100, null=True)),
                ('direccion', models.TextField(blank=True, null=True)),
                ('codigo_postal', models.CharField(blank=True, max_length=10, null=True)),
                ('experiencia_minima', models.CharField(blank=True, max_length=100, null=True)),
                ('educacion_requerida', models.CharField(blank=True, max_length=100, null=True)),
                ('habilidades_requeridas', models.TextField(blank=True, null=True)),
                ('beneficios', models.TextField(blank=True, null=True)),
                ('estado', models.CharField(choices=[('activo', 'Activo'), ('inactivo', 'Inactivo'), ('cerrado', 'Cerrado'), ('suspendido', 'Suspendido')], default='activo', max_length=20)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('fecha_cierre', models.DateTimeField(blank=True, null=True)),
                ('empleador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='oportunidades', to='pricing.empleador')),
            ],
            options={
                'verbose_name': 'Oportunidad',
                'verbose_name_plural': 'Oportunidades',
                'db_table': 'pricing_oportunidad',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='PACConfiguration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Nombre de la configuración PAC', max_length=100)),
                ('pac_type', models.CharField(choices=[('finkok', 'Finkok'), ('edicom', 'EDICOM'), ('solucionfactible', 'Solución Factible'), ('sw', 'SW'), ('custom', 'Personalizado')], max_length=20)),
                ('status', models.CharField(choices=[('active', 'Activo'), ('inactive', 'Inactivo'), ('testing', 'Pruebas')], default='inactive', max_length=20)),
                ('api_url', models.URLField(help_text='URL de la API del PAC')),
                ('api_key', models.CharField(blank=True, max_length=255, null=True)),
                ('api_secret', models.CharField(blank=True, max_length=255, null=True)),
                ('username', models.CharField(blank=True, max_length=100, null=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('certificate_file', models.FileField(blank=True, null=True, upload_to='pac_certificates/')),
                ('private_key_file', models.FileField(blank=True, null=True, upload_to='pac_private_keys/')),
                ('certificate_password', models.CharField(blank=True, max_length=255, null=True)),
                ('config', models.JSONField(default=dict, help_text='Configuración específica del PAC')),
                ('description', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('business_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.businessunit')),
            ],
            options={
                'verbose_name': 'Configuración PAC',
                'verbose_name_plural': 'Configuraciones PAC',
                'db_table': 'pricing_pac_configuration',
            },
        ),
        migrations.CreateModel(
            name='PricingCalculation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estado', models.CharField(choices=[('PENDIENTE', 'Pendiente'), ('EN_PROCESO', 'En proceso'), ('COMPLETADO', 'Completado'), ('CANCELADO', 'Cancelado')], default='PENDIENTE', max_length=20)),
                ('monto_base', models.DecimalField(decimal_places=2, max_digits=10)),
                ('monto_final', models.DecimalField(decimal_places=2, max_digits=10)),
                ('moneda', models.CharField(default='MXN', max_length=3)),
                ('descuentos', models.JSONField(blank=True, encoder=django.core.serializers.json.DjangoJSONEncoder, null=True)),
                ('addons', models.JSONField(blank=True, encoder=django.core.serializers.json.DjangoJSONEncoder, null=True)),
                ('metadata', models.JSONField(blank=True, encoder=django.core.serializers.json.DjangoJSONEncoder, null=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('oportunidad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calculos_servicio', to='pricing.oportunidad')),
            ],
            options={
                'verbose_name': 'Cálculo de Servicio',
                'verbose_name_plural': 'Cálculos de Servicio',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='PricingProposal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estado', models.CharField(choices=[('BORRADOR', 'Borrador'), ('ENVIADA', 'Enviada'), ('APROBADA', 'Aprobada'), ('RECHAZADA', 'Rechazada'), ('CANCELADA', 'Cancelada')], default='BORRADOR', max_length=20)),
                ('titulo', models.CharField(max_length=200)),
                ('descripcion', models.TextField()),
                ('monto_total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('moneda', models.CharField(default='MXN', max_length=3)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_envio', models.DateTimeField(blank=True, null=True)),
                ('fecha_aprobacion', models.DateTimeField(blank=True, null=True)),
                ('fecha_rechazo', models.DateTimeField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, encoder=django.core.serializers.json.DjangoJSONEncoder, null=True)),
                ('oportunidad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='propuestas', to='pricing.oportunidad')),
            ],
            options={
                'verbose_name': 'Propuesta de Servicio',
                'verbose_name_plural': 'Propuestas de Servicio',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='ProposalTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
                ('descripcion', models.TextField()),
                ('activo', models.BooleanField(default=True)),
                ('secciones', models.JSONField(encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('metadata', models.JSONField(blank=True, encoder=django.core.serializers.json.DjangoJSONEncoder, null=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Plantilla de Propuesta',
                'verbose_name_plural': 'Plantillas de Propuesta',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='ReferralFee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('percentage', 'Porcentaje'), ('fixed', 'Monto fijo'), ('tiered', 'Por niveles')], max_length=20)),
                ('value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('conditions', models.JSONField(default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('valid_from', models.DateTimeField()),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-valid_from'],
            },
        ),
        migrations.CreateModel(
            name='ScheduledPayment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Nombre del pago programado', max_length=200)),
                ('payment_type', models.CharField(choices=[('rent', 'Renta'), ('utilities', 'Servicios'), ('insurance', 'Seguros'), ('taxes', 'Impuestos'), ('salary', 'Nómina'), ('supplier', 'Proveedores'), ('loan', 'Préstamo'), ('subscription', 'Suscripción'), ('other', 'Otro')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('currency', models.CharField(default='MXN', max_length=3)),
                ('frequency', models.CharField(choices=[('daily', 'Diario'), ('weekly', 'Semanal'), ('biweekly', 'Quincenal'), ('monthly', 'Mensual'), ('quarterly', 'Trimestral'), ('semiannual', 'Semestral'), ('annual', 'Anual'), ('custom', 'Personalizado')], max_length=20)),
                ('custom_frequency_days', models.IntegerField(blank=True, help_text='Días para frecuencia personalizada', null=True)),
                ('start_date', models.DateTimeField(help_text='Fecha de inicio del pago programado')),
                ('end_date', models.DateTimeField(blank=True, help_text='Fecha de fin (opcional)', null=True)),
                ('next_payment_date', models.DateTimeField(help_text='Próxima fecha de pago')),
                ('status', models.CharField(choices=[('active', 'Activo'), ('paused', 'Pausado'), ('completed', 'Completado'), ('cancelled', 'Cancelado')], default='active', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('beneficiary_name', models.CharField(help_text='Nombre del beneficiario', max_length=200)),
                ('beneficiary_account', models.CharField(blank=True, help_text='Número de cuenta del beneficiario', max_length=50, null=True)),
                ('beneficiary_bank', models.CharField(blank=True, help_text='Banco del beneficiario', max_length=100, null=True)),
                ('beneficiary_clabe', models.CharField(blank=True, help_text='CLABE del beneficiario', max_length=18, null=True)),
                ('description', models.TextField(blank=True)),
                ('reference', models.CharField(blank=True, help_text='Referencia del pago', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('business_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.businessunit')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.person')),
                ('source_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pricing.bankaccount')),
            ],
            options={
                'verbose_name': 'Pago Programado',
                'verbose_name_plural': 'Pagos Programados',
                'db_table': 'pricing_scheduled_payment',
                'ordering': ['next_payment_date'],
            },
        ),
        migrations.CreateModel(
            name='SincronizacionLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('estado', models.CharField(choices=[('EXITO', 'Éxito'), ('ERROR', 'Error'), ('PENDIENTE', 'Pendiente')], max_length=20)),
                ('mensaje', models.TextField(blank=True, null=True)),
                ('wordpress_post_id', models.IntegerField(blank=True, null=True)),
                ('sync_data', models.JSONField(blank=True, default=dict)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('oportunidad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sincronizaciones', to='pricing.oportunidad')),
            ],
            options={
                'verbose_name': 'Log de Sincronización',
                'verbose_name_plural': 'Logs de Sincronización',
                'db_table': 'pricing_sincronizacion_log',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='SincronizacionError',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('mensaje', models.TextField(help_text='Mensaje de error')),
                ('intento', models.IntegerField(default=1, help_text='Número de intento')),
                ('resuelto', models.BooleanField(default=False, help_text='¿El error ha sido resuelto?')),
                ('error_type', models.CharField(blank=True, max_length=100, null=True)),
                ('error_details', models.JSONField(blank=True, default=dict)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_resolucion', models.DateTimeField(blank=True, null=True)),
                ('oportunidad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='errores_sincronizacion', to='pricing.oportunidad')),
            ],
            options={
                'verbose_name': 'Error de Sincronización',
                'verbose_name_plural': 'Errores de Sincronización',
                'db_table': 'pricing_sincronizacion_error',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='ProposalSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('INTRODUCCION', 'Introducción'), ('SERVICIOS', 'Servicios'), ('PRECIOS', 'Precios'), ('PLAZOS', 'Plazos'), ('TERMINOS', 'Términos y Condiciones'), ('CONTACTO', 'Información de Contacto')], max_length=20)),
                ('titulo', models.CharField(max_length=200)),
                ('contenido', models.TextField()),
                ('orden', models.IntegerField(default=0)),
                ('metadata', models.JSONField(blank=True, encoder=django.core.serializers.json.DjangoJSONEncoder, null=True)),
                ('propuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='secciones', to='pricing.pricingproposal')),
            ],
            options={
                'verbose_name': 'Sección de Propuesta',
                'verbose_name_plural': 'Secciones de Propuesta',
                'ordering': ['orden'],
            },
        ),
        migrations.CreateModel(
            name='ProposalFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estado', models.CharField(choices=[('PENDIENTE', 'Pendiente'), ('EN_REVISION', 'En revisión'), ('APROBADO', 'Aprobado'), ('RECHAZADO', 'Rechazado')], default='PENDIENTE', max_length=20)),
                ('comentarios', models.TextField()),
                ('calificacion', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, encoder=django.core.serializers.json.DjangoJSONEncoder, null=True)),
                ('token', models.CharField(blank=True, help_text='Token único para identificar la propuesta', max_length=100, null=True, unique=True)),
                ('response_type', models.CharField(blank=True, choices=[('interested', 'Estoy interesado en contratar el servicio'), ('maybe_later', 'Me interesa pero no ahora'), ('not_interested', 'No estoy interesado'), ('need_more_info', 'Necesito más información')], max_length=20, null=True, verbose_name='Tipo de respuesta')),
                ('rejection_reason', models.CharField(blank=True, choices=[('price', 'El precio es muy alto'), ('timing', 'No es el momento adecuado'), ('budget', 'No hay presupuesto disponible'), ('competitor', 'Contratamos a un competidor'), ('internal', 'Lo haremos internamente'), ('other', 'Otra razón')], max_length=20, null=True, verbose_name='Razón de rechazo')),
                ('how_found_us', models.CharField(blank=True, choices=[('linkedin', 'LinkedIn'), ('website', 'Sitio web'), ('referral', 'Referencia de cliente'), ('social_media', 'Redes sociales'), ('email', 'Email marketing'), ('other', 'Otro')], max_length=20, null=True, verbose_name='Cómo nos conoció')),
                ('price_perception', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Percepción de precio (1-5)')),
                ('missing_info', models.TextField(blank=True, null=True, verbose_name='Información faltante')),
                ('improvement_suggestions', models.TextField(blank=True, null=True, verbose_name='Sugerencias de mejora')),
                ('meeting_requested', models.BooleanField(default=False, verbose_name='Solicita reunión')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('propuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback', to='pricing.pricingproposal')),
            ],
            options={
                'verbose_name': 'Feedback de Propuesta',
                'verbose_name_plural': 'Feedback de Propuestas',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='PricingStrategy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('premium', 'Premium'), ('competitive', 'Competitivo'), ('value', 'Basado en valor')], max_length=20)),
                ('status', models.CharField(choices=[('draft', 'Borrador'), ('active', 'Activo'), ('inactive', 'Inactivo')], default='draft', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('pricing_model', models.JSONField(default=dict)),
                ('conditions', models.JSONField(default=dict)),
                ('success_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('conversion_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('revenue_impact', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('discount_rules', models.ManyToManyField(blank=True, to='pricing.discountrule')),
                ('referral_fees', models.ManyToManyField(blank=True, to='pricing.referralfee')),
            ],
            options={
                'verbose_name': 'Estrategia de Precios',
                'verbose_name_plural': 'Estrategias de Precios',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PricingPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estado', models.CharField(choices=[('PENDIENTE', 'Pendiente'), ('EN_PROCESO', 'En proceso'), ('COMPLETADO', 'Completado'), ('CANCELADO', 'Cancelado')], default='PENDIENTE', max_length=20)),
                ('monto', models.DecimalField(decimal_places=2, max_digits=10)),
                ('moneda', models.CharField(default='MXN', max_length=3)),
                ('metodo', models.CharField(max_length=50)),
                ('id_transaccion', models.CharField(blank=True, max_length=100, null=True)),
                ('metadata', models.JSONField(blank=True, encoder=django.core.serializers.json.DjangoJSONEncoder, null=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('calculo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pagos', to='pricing.pricingcalculation')),
            ],
            options={
                'verbose_name': 'Pago de Servicio',
                'verbose_name_plural': 'Pagos de Servicio',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='PricePoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('valid_from', models.DateTimeField()),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('conditions', models.JSONField(default=dict)),
                ('description', models.TextField(blank=True)),
                ('strategy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pricing.pricingstrategy')),
            ],
            options={
                'ordering': ['-valid_from'],
            },
        ),
        migrations.CreateModel(
            name='PartialPayment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('payment_method', models.CharField(choices=[('credit_card', 'Tarjeta de Crédito'), ('debit_card', 'Tarjeta de Débito'), ('paypal', 'PayPal'), ('bank_transfer', 'Transferencia Bancaria'), ('cash', 'Efectivo'), ('check', 'Cheque'), ('other', 'Otro')], max_length=20)),
                ('reference_number', models.CharField(blank=True, help_text='Número de referencia del pago', max_length=100, null=True)),
                ('transaction_id', models.CharField(blank=True, help_text='ID de la transacción', max_length=100, null=True)),
                ('is_verified', models.BooleanField(default=False, help_text='¿El pago ha sido verificado?')),
                ('payment_date', models.DateTimeField(default=django.utils.timezone.now, help_text='Fecha del pago')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True)),
                ('cfdi_exhibition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='pricing.cfdiexhibition')),
            ],
            options={
                'verbose_name': 'Pago Parcial',
                'verbose_name_plural': 'Pagos Parciales',
                'db_table': 'pricing_partial_payment',
                'ordering': ['-payment_date'],
            },
        ),
        migrations.CreateModel(
            name='PagoRecurrente',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('frecuencia', models.CharField(choices=[('semanal', 'Semanal'), ('quincenal', 'Quincenal'), ('mensual', 'Mensual'), ('trimestral', 'Trimestral'), ('semestral', 'Semestral'), ('anual', 'Anual')], max_length=20)),
                ('fecha_proximo_pago', models.DateTimeField(help_text='Fecha del próximo pago')),
                ('activo', models.BooleanField(default=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('pago_base', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pagos_recurrentes', to='app.paymentmilestone')),
            ],
            options={
                'verbose_name': 'Pago Recurrente',
                'verbose_name_plural': 'Pagos Recurrentes',
                'db_table': 'pricing_pago_recurrente',
            },
        ),
        migrations.CreateModel(
            name='MeetingRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estado', models.CharField(choices=[('PENDIENTE', 'Pendiente'), ('APROBADA', 'Aprobada'), ('RECHAZADA', 'Rechazada'), ('COMPLETADA', 'Completada')], default='PENDIENTE', max_length=20)),
                ('fecha_solicitud', models.DateTimeField()),
                ('fecha_reunion', models.DateTimeField(blank=True, null=True)),
                ('duracion_minutos', models.PositiveIntegerField(default=30)),
                ('tipo_reunion', models.CharField(max_length=50)),
                ('participantes', models.JSONField(encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('notas', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, encoder=django.core.serializers.json.DjangoJSONEncoder, null=True)),
                ('meeting_type', models.CharField(blank=True, choices=[('consultation', 'Consulta inicial'), ('proposal_review', 'Revisión de propuesta'), ('negotiation', 'Negociación'), ('implementation', 'Plan de implementación'), ('follow_up', 'Seguimiento'), ('other', 'Otro')], max_length=20, null=True, verbose_name='Tipo de reunión')),
                ('preferred_date', models.DateField(blank=True, null=True, verbose_name='Fecha preferida')),
                ('preferred_time_range', models.CharField(blank=True, choices=[('morning', 'Mañana (9:00 - 12:00)'), ('afternoon', 'Tarde (12:00 - 17:00)'), ('evening', 'Tarde-Noche (17:00 - 20:00)')], max_length=20, null=True, verbose_name='Horario preferido')),
                ('contact_phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Teléfono de contacto')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('propuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solicitudes_reunion', to='pricing.pricingproposal')),
            ],
            options={
                'verbose_name': 'Solicitud de Reunión',
                'verbose_name_plural': 'Solicitudes de Reunión',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='ExternalServiceInvoice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('invoice_number', models.CharField(help_text='Número de factura', max_length=50, unique=True)),
                ('issue_date', models.DateTimeField(default=django.utils.timezone.now, help_text='Fecha de emisión')),
                ('due_date', models.DateTimeField(help_text='Fecha de vencimiento')),
                ('paid_date', models.DateTimeField(blank=True, help_text='Fecha de pago', null=True)),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('tax_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('currency', models.CharField(default='MXN', max_length=3)),
                ('status', models.CharField(choices=[('draft', 'Borrador'), ('sent', 'Enviada'), ('paid', 'Pagada'), ('overdue', 'Vencida'), ('cancelled', 'Cancelada')], default='draft', max_length=20)),
                ('description', models.TextField(help_text='Descripción de la factura')),
                ('notes', models.TextField(blank=True, help_text='Notas adicionales')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.person')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='pricing.externalservice')),
            ],
            options={
                'verbose_name': 'Factura de Servicio Externo',
                'verbose_name_plural': 'Facturas de Servicios Externos',
                'db_table': 'pricing_external_service_invoice',
                'ordering': ['-issue_date'],
            },
        ),
        migrations.CreateModel(
            name='ExternalServiceActivity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('activity_type', models.CharField(choices=[('call', 'Llamada'), ('meeting', 'Reunión'), ('email', 'Email'), ('proposal', 'Propuesta'), ('negotiation', 'Negociación'), ('delivery', 'Entrega'), ('follow_up', 'Seguimiento'), ('issue', 'Problema'), ('milestone', 'Hito'), ('other', 'Otro')], max_length=20)),
                ('title', models.CharField(help_text='Título de la actividad', max_length=200)),
                ('description', models.TextField(help_text='Descripción detallada')),
                ('activity_date', models.DateTimeField(default=django.utils.timezone.now, help_text='Fecha de la actividad')),
                ('duration_minutes', models.IntegerField(blank=True, help_text='Duración en minutos', null=True)),
                ('outcome', models.TextField(blank=True, help_text='Resultado de la actividad')),
                ('next_actions', models.TextField(blank=True, help_text='Próximas acciones')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='external_service_activities_created', to='app.person')),
                ('participants', models.ManyToManyField(related_name='external_service_activities', to='app.person')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='pricing.externalservice')),
            ],
            options={
                'verbose_name': 'Actividad de Servicio Externo',
                'verbose_name_plural': 'Actividades de Servicios Externos',
                'db_table': 'pricing_external_service_activity',
                'ordering': ['-activity_date'],
            },
        ),
        migrations.AddField(
            model_name='externalservice',
            name='service_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pricing.externalservicetype'),
        ),
        migrations.CreateModel(
            name='Empleado',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nss', models.CharField(blank=True, help_text='Número de Seguridad Social', max_length=11, null=True)),
                ('ocupacion', models.CharField(blank=True, help_text='Ocupación o puesto', max_length=100, null=True)),
                ('clabe', models.CharField(blank=True, help_text='CLABE bancaria', max_length=18, null=True)),
                ('banco', models.CharField(blank=True, help_text='Banco', max_length=100, null=True)),
                ('estado', models.CharField(choices=[('activo', 'Activo'), ('inactivo', 'Inactivo'), ('pendiente', 'Pendiente'), ('suspendido', 'Suspendido')], default='activo', max_length=20)),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('persona', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='empleados', to='app.person')),
            ],
            options={
                'verbose_name': 'Empleado',
                'verbose_name_plural': 'Empleados',
                'db_table': 'pricing_empleado',
            },
        ),
        migrations.AddField(
            model_name='cfdiexhibition',
            name='partial_payments',
            field=models.ManyToManyField(blank=True, related_name='cfdi_exhibitions', to='pricing.partialpayment'),
        ),
        migrations.CreateModel(
            name='ScheduledPaymentExecution',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('processing', 'Procesando'), ('completed', 'Completado'), ('failed', 'Fallido'), ('cancelled', 'Cancelado')], default='pending', max_length=20)),
                ('success', models.BooleanField(default=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('scheduled_date', models.DateTimeField(help_text='Fecha programada para la ejecución')),
                ('executed_date', models.DateTimeField(blank=True, help_text='Fecha real de ejecución', null=True)),
                ('error_message', models.TextField(blank=True, help_text='Mensaje de error si falló')),
                ('execution_log', models.JSONField(default=dict, help_text='Log completo de la ejecución')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('scheduled_payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='executions', to='pricing.scheduledpayment')),
                ('transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.paymenttransaction')),
            ],
            options={
                'verbose_name': 'Ejecución de Pago Programado',
                'verbose_name_plural': 'Ejecuciones de Pagos Programados',
                'db_table': 'pricing_scheduled_payment_execution',
                'ordering': ['-scheduled_date'],
                'indexes': [models.Index(fields=['scheduled_payment', 'status'], name='pricing_sched_pay_stat_idx'), models.Index(fields=['scheduled_date'], name='pricing_sched_pay_date_idx'), models.Index(fields=['success'], name='pricing_sched_pay_succ_idx')],
            },
        ),
        migrations.CreateModel(
            name='PaymentGateway',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Nombre del gateway', max_length=100)),
                ('gateway_type', models.CharField(choices=[('stripe', 'Stripe'), ('paypal', 'PayPal'), ('conekta', 'Conekta'), ('clip', 'Clip'), ('banorte', 'Banorte'), ('banamex', 'Banamex'), ('bbva', 'BBVA')], max_length=20)),
                ('status', models.CharField(choices=[('active', 'Activo'), ('inactive', 'Inactivo'), ('testing', 'Pruebas')], default='inactive', max_length=20)),
                ('api_key', models.CharField(blank=True, max_length=255, null=True)),
                ('api_secret', models.CharField(blank=True, max_length=255, null=True)),
                ('webhook_url', models.URLField(blank=True, null=True)),
                ('webhook_secret', models.CharField(blank=True, max_length=255, null=True)),
                ('supported_currencies', models.JSONField(default=list, help_text='Monedas soportadas')),
                ('supported_payment_methods', models.JSONField(default=list, help_text='Métodos de pago soportados')),
                ('processing_fee_percentage', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Comisión porcentual del gateway', max_digits=5)),
                ('processing_fee_fixed', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Comisión fija del gateway', max_digits=10)),
                ('pac_integration', models.BooleanField(default=False, help_text='¿Integra con PAC?')),
                ('config', models.JSONField(default=dict, help_text='Configuración específica del gateway')),
                ('description', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('business_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.businessunit')),
                ('pac_config', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pricing.pacconfiguration')),
            ],
            options={
                'verbose_name': 'Gateway de Pago',
                'verbose_name_plural': 'Gateways de Pago',
                'db_table': 'pricing_payment_gateway',
                'unique_together': {('business_unit', 'gateway_type')},
            },
        ),
        migrations.CreateModel(
            name='ExternalServiceMilestone',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Título del hito', max_length=200)),
                ('description', models.TextField(help_text='Descripción del hito')),
                ('milestone_number', models.IntegerField(help_text='Número secuencial del hito')),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('in_progress', 'En Progreso'), ('completed', 'Completado'), ('delayed', 'Retrasado'), ('cancelled', 'Cancelado')], default='pending', max_length=20)),
                ('due_date', models.DateTimeField(help_text='Fecha límite del hito')),
                ('completed_date', models.DateTimeField(blank=True, help_text='Fecha de completado', null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, help_text='Monto asociado al hito', max_digits=15, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='milestones', to='pricing.externalservice')),
            ],
            options={
                'verbose_name': 'Hito de Servicio Externo',
                'verbose_name_plural': 'Hitos de Servicios Externos',
                'db_table': 'pricing_external_service_milestone',
                'ordering': ['milestone_number'],
                'unique_together': {('service', 'milestone_number')},
            },
        ),
        migrations.CreateModel(
            name='BusinessUnitAddon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('activated_at', models.DateTimeField(auto_now_add=True)),
                ('deactivated_at', models.DateTimeField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict, null=True)),
                ('addon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='business_unit_addons', to='app.portaladdon')),
                ('business_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='business_unit_addons', to='app.businessunit')),
            ],
            options={
                'verbose_name': 'Addon de Unidad de Negocio',
                'verbose_name_plural': 'Addons de Unidades de Negocio',
                'ordering': ['business_unit', 'addon'],
                'unique_together': {('business_unit', 'addon')},
            },
        ),
    ]
