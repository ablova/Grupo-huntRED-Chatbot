# Generated by Django 4.2.23 on 2025-07-17 00:41

import app.ats.accounts.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(error_messages={'unique': 'Ya existe un usuario con este email.'}, max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='nombres')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='apellidos')),
                ('is_staff', models.BooleanField(default=False, help_text='Designa si el usuario puede iniciar sesión en el sitio de administración.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designa si este usuario debe ser tratado como activo. Desmarque esta opción en lugar de borrar la cuenta.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='teléfono')),
                ('status', models.CharField(choices=[('ACTIVE', 'Activo'), ('INACTIVE', 'Inactivo'), ('SUSPENDED', 'Suspendido'), ('PENDING', 'Pendiente')], default='ACTIVE', max_length=20, verbose_name='estado')),
                ('verification_status', models.CharField(choices=[('VERIFIED', 'Verificado'), ('UNVERIFIED', 'No verificado'), ('PENDING', 'Pendiente'), ('REJECTED', 'Rechazado')], default='UNVERIFIED', max_length=20, verbose_name='estado de verificación')),
                ('role', models.CharField(choices=[('SUPER_ADMIN', 'Super Admin'), ('BU_ADMIN', 'Business Unit Admin'), ('BU_DIVISION', 'Business Unit Division')], default='BU_DIVISION', max_length=20, verbose_name='rol')),
                ('permissions', models.JSONField(blank=True, default=dict, verbose_name='permisos')),

                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'usuario',
                'verbose_name_plural': 'usuarios',
                'db_table': 'auth_user',
            },
            managers=[
                ('objects', app.ats.accounts.models.CustomUserManager()),
            ],
        ),
    ]
